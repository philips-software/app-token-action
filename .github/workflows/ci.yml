name: 'CI'
on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Install dependencies
        run: yarn install
      - name: Check format and lint
        run: yarn run format-check && yarn lint
      - name: Build and package
        run: yarn build

      - name: Update dist in the repository
        if: github.event_name != 'pull_request'
        uses: stefanzweifel/git-auto-commit-action@v4.15.4
        with:
          commit_message: 'chore(ci): Updating dist'
          file_pattern: dist/*

  release:
    if: github.event_name != 'pull_request'
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - uses: actions/setup-node@v3
        with:
          node-version: 16

      - uses: ./
        id: app
        with:
          app_id: ${{ secrets.FOREST_RELEASER_APP_ID }}
          app_base64_private_key: ${{ secrets.FOREST_RELEASER_APP_PRIVATE_KEY_BASE64 }}
          auth_type: installation
          org: philips-software

      - name: Extract branch name
        run: echo ::set-output name=short_ref::${GITHUB_REF#refs/*/}
        id: branch

      - name: Dry run release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: yarn && yarn run release -d -b ${{ steps.branch.outputs.short_ref }}

      - name: Release
        if: github.event_name != 'pull_request' && contains('refs/heads/main', github.ref)
        env:
          GITHUB_TOKEN: ${{ steps.app.outputs.token }}
        run: yarn && yarn run release
